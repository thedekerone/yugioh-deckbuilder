{"version":3,"sources":["components/Card.js","components/CardsList.js","components/Loading.js","App.js","components/CardInfo.js","components/ErrorPage.js","Main.js","serviceWorker.js","index.js"],"names":["Card","_ref","card","react_default","a","createElement","Fragment","src","image_url","alt","width","CardsList","data","className","map","key","id","react_router_dom","to","pathname","state","carta","Loading","App","_this","this","type","onChange","props","change","value","main","match","onClick","click","loading","filter","element","name","toLowerCase","includes","slice","limitValue","reverse","Component","CardInfo","target","error","location","setState","_unused","console","log","style","maxWidth","desc","ebay_price","amazon_price","ErrorPage","Main","getData","req","axios","get","then","res","catch","err","handleChange","e","handleClick","axiosCancelSource","cancel","CancelToken","source","_this2","react_router","exact","path","render","gaa","App_App","component","Boolean","window","hostname","ReactDOM","Main_Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e375e4ec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Card({ card }) {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<img src={card.image_url} alt='' width='200px' />\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function CardsList({ data }) {\r\n\treturn (\r\n\t\t<div className='CardsList'>\r\n\t\t\t<ul>\r\n\t\t\t\t{data.map((card) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={card.id}>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\tpathname : '/yugioh-deckbuilder/' + card.id,\r\n\t\t\t\t\t\t\t\t\tstate    : {\r\n\t\t\t\t\t\t\t\t\t\tcarta : card\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Card card={card} />\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Loading() {\r\n\treturn (\r\n\t\t<div className='loading'>\r\n\t\t\t<div className='lds-hourglass' />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport CardsList from './components/CardsList';\nimport './App.css';\nimport Loading from './components/Loading';\n\nexport default class App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Cards</h1>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tonChange={this.props.change}\n\t\t\t\t\tvalue={this.props.main.match}\n\t\t\t\t/>\n\t\t\t\t<button className='btn btn-dark mb-4' onClick={this.props.click}>\n\t\t\t\t\tShow more!\n\t\t\t\t</button>\n\t\t\t\t{this.props.main.loading ? <Loading /> : null}\n\t\t\t\t<CardsList\n\t\t\t\t\tdata={this.props.main.data\n\t\t\t\t\t\t.filter((element) => {\n\t\t\t\t\t\t\treturn element.name.toLowerCase().includes(this.props.main.match.toLowerCase());\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.slice(1, this.props.main.limitValue)\n\t\t\t\t\t\t.reverse()}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\r\nimport Loading from './Loading';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class CardInfo extends Component {\r\n\tstate = {\r\n\t\ttarget : {\r\n\t\t\terror:'error'\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\ttry{\r\n\t\t\tthis.props.location.state.carta\r\n\t\t\t? this.setState({ error:null,target: this.props.location.state.carta })\r\n\t\t\t: this.setState({ error: 'error' });\r\n\t\t}catch{\r\n\t\t\tconsole.log('xd')\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.target.error === 'error') {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<h1>Card not found</h1>\r\n\t\t\t\t\t<Link to='/yugioh-deckbuilder' className='btn btn-primary'>Go back</Link>\r\n\t\t\t\t</React.Fragment>);\r\n\t\t}\r\n\t\tif (this.state.loading === true) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='loading'>\r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h1>{this.state.target.name}</h1>\r\n\t\t\t\t<div className='loading card mb-3 ' style={{ maxWidth: ' 840px' }}>\r\n\t\t\t\t\t<div className='row no-gutters'>\r\n\t\t\t\t\t\t<div className='col-md-6'>\r\n\t\t\t\t\t\t\t<img src={this.state.target.image_url} alt='' width='300px' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-md-6'>\r\n\t\t\t\t\t\t\t<p className='ml-4 col-md-8'>{this.state.target.desc}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tebay:<button className='btn btn-primary'> {this.state.target.ebay_price}</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tamazon:<button className='btn btn-primary'> {this.state.target.amazon_price}</button>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ErrorPage() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>error lul</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from 'react';\r\nimport App from './App';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport CardInfo from './components/CardInfo';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport axios from 'axios';\r\n\r\nexport default class Main extends Component {\r\n\tstate = {\r\n\t\tloading    : true,\r\n\t\terror      : null,\r\n\t\tdata       : [],\r\n\t\tlimitValue : 50,\r\n\t\tmatch      : ''\r\n\t};\r\n\r\n\treq; //helps to cancel axios after ummount\r\n\r\n\tgetData = () => {\r\n\t\tthis.setState({\r\n\t\t\tloading : true,\r\n\t\t\terror   : null\r\n\t\t});\r\n\t\tthis.req = axios\r\n\t\t\t.get('https://db.ygoprodeck.com/api/v4/cardinfo.php')\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst data = res.data[0];\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tthis.setState({ loading: false, data: data });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({ loading: false, error: err });\r\n\t\t\t});\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({ match: e.target.value });\r\n\t};\r\n\r\n\thandleClick = () => {\r\n\t\tthis.setState({ limitValue: this.state.limitValue + 50 });\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('unmount component');\r\n\t\tthis.axiosCancelSource.cancel('Component unmounted.');\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.axiosCancelSource = axios.CancelToken.source();\r\n\t\tthis.getData();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath='/yugioh-deckbuilder/'\r\n\t\t\t\t\t\trender={(gaa) => (\r\n\t\t\t\t\t\t\t<App state={gaa} change={this.handleChange} click={this.handleClick} main={this.state} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact path='/yugioh-deckbuilder/:cardId' component={CardInfo} />\r\n\t\t\t\t\t<Route component={ErrorPage} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}